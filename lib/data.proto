syntax = "proto2";

enum POOLTYPE {
    PPLNS = 0;
    PPS = 1;
    PROP = 2;
    SOLO = 3;
}

enum MESSAGETYPE {
    SHARE = 0;
    BLOCK = 1;
    INVALIDSHARE = 2;
    ALTBLOCK = 3;
}

message WSData {
    required MESSAGETYPE msgType = 1;
    required string key = 2;
    required bytes msg = 3;
    required int32 exInt = 4;
}

message InvalidShare{
    required string paymentAddress = 1;
    optional string paymentID = 2;
    required string identifier = 3;
}

message Share {
    optional int64 shares = 1;
    required string paymentAddress = 2;
    required bool foundBlock = 3;
    optional string paymentID = 4;
    required bool trustedShare = 5;
    required POOLTYPE poolType = 6;
    required int32 poolID = 7;
    required int64 blockDiff = 8;
    required bool bitcoin = 9;
    required int32 blockHeight = 10;
    required int64 timestamp = 11;
    required string identifier = 12;
    optional int32 port = 13;
    optional int64 shares2 = 14;
    optional int64 share_num = 15;
    optional float raw_shares = 16;
}

message Block {
    required string hash = 1;
    required int64 difficulty = 2;
    required int64 shares = 3;
    required int64 timestamp = 4;
    required POOLTYPE poolType = 5;
    required bool unlocked = 6;
    required bool valid = 7;
    optional int64 value = 8;
    optional bool pay_ready = 9;
}

message AltBlock {
    required string hash = 1;
    required int64 difficulty = 2;
    required int64 shares = 3;
    required int64 timestamp = 4;
    required POOLTYPE poolType = 5;
    required bool unlocked = 6;
    required bool valid = 7;
    required int32 port = 8;
    required int32 height = 9;
    required int32 anchor_height = 10;
    required string coin = 11;
    optional int64 value = 12;
    optional int64 pay_value = 13;
    optional string pay_stage = 14;
    optional string pay_status = 15;
    optional bool pay_ready = 16;
    optional string parent_chain_hash = 17;
}
